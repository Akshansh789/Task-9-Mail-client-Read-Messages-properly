{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaha\\\\Downloads\\\\Task-9 Read Messages properly\\\\src\\\\Components\\\\Pages\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './Inbox';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Accordion, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { messageActions } from '../Store';\nimport { useHistory } from 'react-router-dom';\nimport { Dot } from 'react-bootstrap-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction removeSpecialChar(mail) {\n  let newMail = \"\";\n  for (let i = 0; i < mail.length; i++) {\n    if (mail[i] !== \"@\" && mail[i] !== \".\") {\n      newMail += mail[i];\n    }\n  }\n  return newMail;\n}\nfunction countUnreadMessages(arr) {\n  let unreadeMessages = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (!arr.isReaded) {\n      unreadeMessages = unreadeMessages + 1;\n    }\n  }\n  return unreadeMessages;\n}\nfunction Inbox() {\n  _s();\n  const user = removeSpecialChar(useSelector(state => state.authentication.user));\n  const messages = useSelector(state => state.messages.messages);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleCompose = e => {\n    e.preventDefault();\n    history.push(\"/composemail\");\n  };\n  const handleReadedMessage = async message => {\n    console.log(message);\n    console.log(\"clicked\");\n    console.log(user, message.name);\n    try {\n      let responce = await fetch(`https://react-mailbox-client-8409e-default-rtdb.firebaseio.com/mail/${user}/${message.name}.json`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: {\n          \"isReaded\": true\n        }\n      });\n      if (responce.ok) {\n        alert(\"Readed\");\n      } else {\n        throw new Error(\"Failed to Read mail\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    async function fetchMessages() {\n      try {\n        let responce = await fetch(`https://react-mailbox-client-8409e-default-rtdb.firebaseio.com/mail/${user}.json`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (responce.ok) {\n          let data = await responce.json();\n          console.log(data);\n          const keys = Object.keys(data);\n          let newMessageArray = [];\n          keys.forEach(key => {\n            newMessageArray.unshift({\n              ...data[key],\n              name: key\n            });\n          });\n          console.log(newMessageArray);\n          dispatch(messageActions.setMessages(newMessageArray));\n        } else {\n          throw new Error(\"Failed to fetch mail\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    let fetching = setTimeout(() => {\n      fetchMessages();\n    }, 10000);\n    return () => {\n      clearTimeout(fetching);\n    };\n  }, [user, messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2  mx-2 row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"fst-italic col-md-8\",\n        children: \"Welcome to your mail box!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleCompose,\n        children: \"Compose\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"float-right h4\",\n        children: [\"Unread Messages:\", countUnreadMessages(messages)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), messages.map(message => {\n      return /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        onClick: () => handleReadedMessage(message),\n        children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: [!message.isReaded && /*#__PURE__*/_jsxDEV(Dot, {\n              width: 30,\n              height: 30,\n              color: \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 53\n            }, this), \" From:\", message.Sender]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Subject:\", message.mailSubject]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.mailContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Inbox, \"za2cBKYywn0YwuwikNCHeCwadW8=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","Accordion","Button","useDispatch","useSelector","messageActions","useHistory","Dot","jsxDEV","_jsxDEV","removeSpecialChar","mail","newMail","i","length","countUnreadMessages","arr","unreadeMessages","isReaded","Inbox","_s","user","state","authentication","messages","dispatch","history","handleCompose","e","preventDefault","push","handleReadedMessage","message","console","log","name","responce","fetch","method","headers","body","ok","alert","Error","error","fetchMessages","data","json","keys","Object","newMessageArray","forEach","key","unshift","setMessages","fetching","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","defaultActiveKey","Item","eventKey","Header","width","height","color","Sender","Body","mailSubject","mailContent","_c","$RefreshReg$"],"sources":["C:/Users/chaha/Downloads/Task-9 Read Messages properly/src/Components/Pages/Inbox.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './Inbox'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Accordion, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { messageActions } from '../Store';\nimport { useHistory } from 'react-router-dom';\nimport { Dot } from 'react-bootstrap-icons';\nfunction removeSpecialChar(mail) {\n  let newMail = \"\";\n  for (let i = 0; i < mail.length; i++) {\n    if (mail[i] !== \"@\" && mail[i] !== \".\") {\n      newMail += mail[i]\n    }\n  }\n  return newMail;\n}\nfunction countUnreadMessages(arr) {\n  let unreadeMessages = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (!arr.isReaded) {\n      unreadeMessages = unreadeMessages + 1;\n    }\n  }\n  return unreadeMessages;\n}\n\nfunction Inbox() {\n  const user = removeSpecialChar(useSelector(state => state.authentication.user));\n  const messages = useSelector(state => state.messages.messages);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleCompose = (e) => {\n    e.preventDefault();\n    history.push(\"/composemail\");\n  }\n  const handleReadedMessage = async (message) => {\n    console.log(message)\n    console.log(\"clicked\");\n    console.log(user,message.name);\n    try {\n      let responce = await fetch(\n        `https://react-mailbox-client-8409e-default-rtdb.firebaseio.com/mail/${user}/${message.name}.json`,\n        {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body:{\"isReaded\":true}\n        }\n      )\n      if (responce.ok) {\n        alert(\"Readed\")\n      } else {\n        throw new Error(\"Failed to Read mail\")\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  useEffect(() => {\n    async function fetchMessages() {\n      try {\n        let responce = await fetch(\n          `https://react-mailbox-client-8409e-default-rtdb.firebaseio.com/mail/${user}.json`,\n          {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          }\n        )\n        if (responce.ok) {\n          let data = await responce.json();\n          console.log(data);\n          const keys = Object.keys(data);\n          let newMessageArray = [];\n          keys.forEach((key) => {\n            newMessageArray.unshift({ ...data[key], name: key })\n          });\n          console.log(newMessageArray);\n          dispatch(messageActions.setMessages(newMessageArray));\n        } else {\n          throw new Error(\"Failed to fetch mail\")\n        }\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    let fetching = setTimeout(() => {\n      fetchMessages();\n    }, 10000);\n    return () => {\n      clearTimeout(fetching);\n    }\n  }, [user, messages])\n\n  return (\n    <div className='container'>\n\n      <div className='my-2  mx-2 row'>\n        <h1 className=\"fst-italic col-md-8\" >\n          Welcome to your mail box!!!\n        </h1>\n        <hr />\n      </div>\n      <div>\n        <Button variant=\"primary\" onClick={handleCompose}>\n          Compose\n        </Button>\n      </div>\n      <div>\n        <h1 className='text-center'>Inbox</h1>\n        <span className='float-right h4'>Unread Messages:{countUnreadMessages(messages)}</span>\n      </div>\n      {messages.map((message) => {\n        return <Accordion defaultActiveKey=\"0\" onClick={() =>handleReadedMessage(message)}>\n          <Accordion.Item eventKey=\"1\">\n            <Accordion.Header>{!message.isReaded && <Dot width={30} height={30} color=\"blue\" />} From:{message.Sender}</Accordion.Header>\n            <Accordion.Body>\n              <h5>Subject:{message.mailSubject}</h5>\n              <p>{message.mailContent}</p>\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n      })\n      }\n    </div>\n  )\n}\n\nexport default Inbox;\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}